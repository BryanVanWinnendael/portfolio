---
import Nav from "@/components/nav"
import "@/styles/globals.css"
import { Toaster } from "@/components/ui/toaster"
import Footer from "@/components/footer"
import { ViewTransitions } from "astro:transitions"
import Particles from "@/components/ui/particles"

interface Props {
  title: string
}

const { title } = Astro.props
---

<script>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme")
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light"
  }
  const isDark = getThemePreference() === "dark"
  document.documentElement.classList[isDark ? "add" : "remove"]("dark")

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark")
      localStorage.setItem("theme", isDark ? "dark" : "light")
    })
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    })
  }

  document.addEventListener("astro:after-swap", function () {
    if (localStorage.getItem("theme") === "dark")
      document.documentElement.classList.toggle("dark", true)
  })
</script>

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body class="min-h-screen bg-background font-sans antialiased relative">
    <Nav client:load />
    <div class="max-w-[40rem] mx-auto px-6 pb-12 pt-24 relative z-10">
      <slot />
      <Footer />
    </div>
    <Particles
      className="absolute inset-0 z-0"
      quantity={100}
      ease={50}
      refresh={false}
      client:load
    />
    <Toaster client:load />
  </body>
</html>
